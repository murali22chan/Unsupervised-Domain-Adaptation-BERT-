Experiment Details
Training Data: finance Testing Data: finance Training Sequnce Length: 128 Testing Sequence Length: 32
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertModel: ['cls.seq_relationship.weight', 'cls.predictions.decoder.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.weight', 'cls.seq_relationship.bias', 'cls.predictions.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Traceback (most recent call last):
  File "D:\Thesis\Domain Adaptation (Unsupervised DA through backpropagation)\main.py", line 182, in <module>
    loss = model(source_input_ids=source_encodings['input_ids'],
  File "C:\Users\mural\Envs\ML\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\Thesis\Domain Adaptation (Unsupervised DA through backpropagation)\main.py", line 80, in forward
    source_outputs = self.bert(source_input_ids,
  File "C:\Users\mural\Envs\ML\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\mural\Envs\ML\lib\site-packages\transformers\models\bert\modeling_bert.py", line 967, in forward
    input_shape = input_ids.size()
AttributeError: 'list' object has no attribute 'size'