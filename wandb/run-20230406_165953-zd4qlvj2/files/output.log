Experiment Details
Training Data: finance Testing Data: medicine Training Sequnce Length: 128 Testing Sequence Length: 32
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertModel: ['cls.predictions.transform.dense.weight', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.weight', 'cls.predictions.decoder.weight', 'cls.seq_relationship.bias', 'cls.predictions.transform.LayerNorm.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
  0%|                                                                                                                                                                                     | 0/3 [02:21<?, ?it/s]
Traceback (most recent call last):
  File "D:\Thesis\Domain Adaptation (Unsupervised DA through backpropagation)\main.py", line 336, in <module>
    loss = model(source_input_ids=None,
  File "C:\Users\mural\Envs\ML\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\Thesis\Domain Adaptation (Unsupervised DA through backpropagation)\main.py", line 99, in forward
    tgt_labels = tgt_labels.type(torch.LongTensor).unsqueeze(2)
IndexError: Dimension out of range (expected to be in range of [-2, 1], but got 2)